{"version":3,"sources":["Components/GtihubCredentials.js","redux/githubSearch/githubSearch.action.js","redux/githubSearch/githubSearch.reducer.js","redux/rootReducer.js","redux/store.js","Components/GithubProfileCard.js","Components/GithubProfileDetails.js","Components/GithubProfile.js","Components/GithubRepos.js","Components/GithubSearchApp.js","assets/Logo.png","App.js","reportWebVitals.js","index.js"],"names":["CLIENT_ID","CLIENT_SECRET","FETCH_GITHUB_PROFILE_REQUEST","FETCH_GITHUB_PROFILE_SUCCESS","FETCH_GITHUB_PROFILE_FAILURE","FETCH_GITHUB_REPO_REQUEST","FETCH_GITHUB_REPO_SUCCESS","FETCH_GITHUB_REPO_FAILURE","githubFeatureKey","initialstate","loading","error","gitHubProfile","githubRepo","rootReducer","combineReducers","githubReducer","state","action","type","githubActions","payload","middleWare","logger","thunk","store","createStore","composeWithDevTools","applyMiddleware","GithubProfileCard","githubProfileRepoInfo","useSelector","Fragment","className","src","avatar_url","alt","name","bio","href","html_url","target","GithubProfileDetails","props","followers","public_repos","public_gists","following","location","email","company","blog","created_at","GithubProfile","GithubRepos","map","repo","stargazers_count","watchers_count","GithubSearchApp","dispatch","useDispatch","useState","githubUser","setGithubUser","onSubmit","event","preventDefault","a","dataURL","Axios","get","response","data","githubAction","value","onChange","e","size","placeholder","Object","keys","length","App","Logo","style","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32e0e423.chunk.js","sourcesContent":["export const CLIENT_ID = 'ec1594e91cfa6b4281cb';\r\nexport const CLIENT_SECRET = '02388e8e126c1f3d96d7b2a59350a3620c08c137';\r\n\r\n","import {CLIENT_ID, CLIENT_SECRET} from \"../../Components/GtihubCredentials\";\r\nimport Axios from 'axios';\r\n\r\nexport const FETCH_GITHUB_PROFILE_REQUEST = 'FETCH_GITHUB_PROFILE_REQUEST';\r\nexport const FETCH_GITHUB_PROFILE_SUCCESS = 'FETCH_GITHUB_PROFILE_SUCCESS';\r\nexport const FETCH_GITHUB_PROFILE_FAILURE = 'FETCH_GITHUB_PROFILE_FAILURE';\r\n\r\nexport const FETCH_GITHUB_REPO_REQUEST = 'FETCH_GITHUB_REPO_REQUEST';\r\nexport const FETCH_GITHUB_REPO_SUCCESS = 'FETCH_GITHUB_REPO_SUCCESS';\r\nexport const FETCH_GITHUB_REPO_FAILURE = 'FETCH_GITHUB_REPO_FAILURE';\r\n\r\n\r\nexport const githubProfileInfo = (githubUser) => {\r\n    return async (dispatch) => {\r\n        dispatch({type: FETCH_GITHUB_PROFILE_REQUEST});\r\n        try {\r\n            let dataURL = `https://api.github.com/users/${githubUser}?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`;\r\n            let response = await Axios.get(dataURL);\r\n            dispatch({type:FETCH_GITHUB_PROFILE_SUCCESS, payload:response.data});\r\n        }\r\n        catch (error) {\r\n            dispatch({type:FETCH_GITHUB_PROFILE_FAILURE, payload:error});\r\n        }\r\n    };\r\n};\r\n\r\nexport const githubRepoInfo = (githubUser) => {\r\n    return async (dispatch) => {\r\n        dispatch({type: FETCH_GITHUB_REPO_REQUEST});\r\n        try {\r\n            let dataURL = `https://api.github.com/users/${githubUser}/repos?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`;\r\n            let response = await Axios.get(dataURL);\r\n            dispatch({type:FETCH_GITHUB_REPO_SUCCESS, payload:response.data});\r\n        }\r\n        catch (error) {\r\n            dispatch({type:FETCH_GITHUB_REPO_FAILURE, payload:error});\r\n        }\r\n    };\r\n};\r\n","import * as githubActions from './githubSearch.action';\r\nexport const githubFeatureKey = 'githubSearch';\r\n\r\nlet initialstate = {\r\n    loading: false,\r\n    error: '',\r\n    gitHubProfile : {},\r\n    githubRepo: []\r\n};\r\n\r\nexport const reducer = (state= initialstate, action) => {\r\n    switch(action.type) {\r\n        case githubActions.FETCH_GITHUB_PROFILE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case githubActions.FETCH_GITHUB_PROFILE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                gitHubProfile: action.payload\r\n            };\r\n        case githubActions.FETCH_GITHUB_PROFILE_FAILURE:\r\n            return {\r\n                ...state,\r\n                gitHubProfile: action.payload\r\n            };\r\n        case githubActions.FETCH_GITHUB_REPO_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case githubActions.FETCH_GITHUB_REPO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                githubRepo: action.payload\r\n            };\r\n        case githubActions.FETCH_GITHUB_REPO_FAILURE:\r\n            return {\r\n                ...state,\r\n                githubRepo: action.payload\r\n            };\r\n        default: return state;\r\n\r\n    }\r\n};\r\n","import {combineReducers} from \"redux\";\r\nimport * as githubReducer from '../redux/githubSearch/githubSearch.reducer';\r\nconst rootReducer = combineReducers({\r\n    [githubReducer.githubFeatureKey]: githubReducer.reducer\r\n});\r\n\r\nexport {rootReducer}\r\n","import {applyMiddleware, createStore} from \"redux\";\r\nimport {rootReducer} from \"./rootReducer\";\r\nimport {logger} from \"redux-logger\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nlet middleWare = [logger, thunk]\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middleWare)));\r\nexport {store};\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport * as githubReducer from \"../redux/githubSearch/githubSearch.reducer\";\r\n\r\nlet GithubProfileCard = () => {\r\n    let githubProfileRepoInfo = useSelector((state) => {\r\n        return state[githubReducer.githubFeatureKey];\r\n    });\r\n    let {loading, gitHubProfile, error} = githubProfileRepoInfo;\r\n    return (\r\n        <React.Fragment>\r\n            <React.Fragment>\r\n                <div className=\"card\">\r\n                    <img src={gitHubProfile.avatar_url} alt=\"\" className=\"img-fluid\"/>\r\n                    <div className=\"card-body\">\r\n                        <p className=\"h4\">{gitHubProfile.name}</p>\r\n                        <small>{gitHubProfile.bio}</small><br/>\r\n                        <a href={gitHubProfile.html_url} target=\"_blank\" className=\"btn btn-success btn-sm\">Profile</a>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default GithubProfileCard;\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport * as githubReducer from \"../redux/githubSearch/githubSearch.reducer\";\r\n\r\nlet GithubProfileDetails = (props) => {\r\n    let githubProfileRepoInfo = useSelector((state) => {\r\n        return state[githubReducer.githubFeatureKey];\r\n    });\r\n    let {loading, gitHubProfile, error} = githubProfileRepoInfo;\r\n    return (\r\n        <React.Fragment>\r\n            <React.Fragment>\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        <span className=\"badge badge-success mx-2\">{gitHubProfile.followers} Followers</span>\r\n                        <span className=\"badge badge-warning mx-2\">{gitHubProfile.public_repos} Repos</span>\r\n                        <span className=\"badge badge-secondary mx-2\">{gitHubProfile.public_gists} Gists</span>\r\n                        <span className=\"badge badge-danger mx-2\">{gitHubProfile.following} Following</span>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <ul className=\"list-group\">\r\n                            <li className=\"list-group-item\">\r\n                                NAME : <span className=\"font-weight-bold\">{gitHubProfile.name}</span>\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                Location : <span>{gitHubProfile.location}</span>\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                Email : <span>{gitHubProfile.email}</span>\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                Company : <span>{gitHubProfile.company}</span>\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                Blog : <span>\r\n                                <a href={gitHubProfile.blog} target=\"_blank\">Blog</a>\r\n                            </span>\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                Member Since : <span>{gitHubProfile.created_at}</span>\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                Profile URL : <span>\r\n                                <a href={gitHubProfile.html_url} target=\"_blank\">{gitHubProfile.html_url}</a>\r\n                            </span>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default GithubProfileDetails;\r\n","import React from \"react\";\r\nimport GithubProfileCard from \"./GithubProfileCard\";\r\nimport GithubProfileDetails from \"./GithubProfileDetails\";\r\n\r\nlet GithubProfile = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"container mt-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <p className=\"h5 text-primary\">Github Profile Details</p>\r\n                        <p className=\"lead\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ab ad nam quod soluta. Blanditiis iure sint vitae? Adipisci, facere laborum maxime nulla porro quisquam repellat repellendus rerum sint, tempora velit?</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3\">\r\n                        <GithubProfileCard/>\r\n                    </div>\r\n                    <div className=\"col-md-9\">\r\n                        <GithubProfileDetails/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default GithubProfile;\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport * as githubReducer from \"../redux/githubSearch/githubSearch.reducer\";\r\n\r\nlet GithubRepos = (props) => {\r\n    let githubProfileRepoInfo = useSelector((state) => {\r\n        return state[githubReducer.githubFeatureKey];\r\n    });\r\n    let {loading, githubRepo, error} = githubProfileRepoInfo;\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"container mt-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <p className=\"h5 text-primary\">Github Repos Details</p>\r\n                        <p className=\"lead\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusamus alias aliquid assumenda beatae eaque, esse facere facilis, iusto laborum nihil omnis quod quos reprehenderit sed sequi veritatis voluptate. Esse, sit.</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <React.Fragment>\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <p className=\"h4\">Your Repositories</p>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <ul className=\"list-group\">\r\n                                        {\r\n                                            githubRepo.map(repo => {\r\n                                                return(\r\n                                                    <React.Fragment>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            <div className=\"d-flex justify-content-between\">\r\n                                                    <span className=\"h5\">\r\n                                                        <a href={repo.html_url} target=\"_blank\">{repo.name}</a>\r\n                                                    </span>\r\n                                                                <span className=\"badge badge-success\">{repo.stargazers_count} Stars </span>\r\n                                                                <span className=\"badge badge-warning\">{repo.watchers_count} Watchers </span>\r\n                                                            </div>\r\n                                                        </li>\r\n                                                    </React.Fragment>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default GithubRepos;\r\n","import React, {useState} from \"react\";\r\nimport GithubProfile from \"./GithubProfile\";\r\nimport GithubRepos from \"./GithubRepos\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport * as githubAction from '../redux/githubSearch/githubSearch.action';\r\nimport * as githubReducer from '../redux/githubSearch/githubSearch.reducer';\r\n\r\nlet GithubSearchApp = () => {\r\n    let dispatch = useDispatch();\r\n    let [githubUser , setGithubUser] = useState('');\r\n    let [githubProfile , setGithubProfile] = useState({});\r\n    let [githubRepos , setGithubRepos] = useState([]);\r\n    let [errorMessage , setErrorMessage] = useState('');\r\n\r\n    let submitSearch = (event) => {\r\n        event.preventDefault();\r\n        dispatch(githubAction.githubProfileInfo(githubUser));\r\n        dispatch(githubAction.githubRepoInfo(githubUser))\r\n    };\r\n    let githubProfileRepoInfo = useSelector((state) => {\r\n        return state[githubReducer.githubFeatureKey];\r\n    });\r\n    let {loading, gitHubProfile, githubRepo, error} = githubProfileRepoInfo;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/*<pre>{JSON.stringify(gitHubProfile)}</pre>*/}\r\n            <div className=\"container mt-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <p className=\"h3 text-secondary\">Github Profile Search</p>\r\n                        <p className=\"lead\">GitHub is an increasingly popular programming resource used for code sharing. It's a social networking site for programmers that many companies and organizations use to facilitate project management and collaboration. According to statistics collected in October 2020, it is the most prominent source code host, with over 60 million new repositories created in 2020 and boasting over 56 million total developers.\r\n                            Before we take an in-depth look at what GitHub is, let’s check out a use case and gain an appreciation for its relevance.</p>\r\n                      </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <form className=\"form-inline\" onSubmit={submitSearch}>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    value={githubUser}\r\n                                    onChange={e => setGithubUser(e.target.value)}\r\n                                    size=\"30\" type=\"text\" className=\"form-control\" placeholder=\"Github Username\"/>\r\n                            </div>\r\n                            <input type=\"submit\" className=\"btn btn-secondary btn-sm\" value=\"Search\"/>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                {/* Github Profile Details */}\r\n                <React.Fragment>\r\n                        {\r\n                            Object.keys(gitHubProfile).length > 0 ?\r\n                                <React.Fragment>\r\n                                    <GithubProfile/>\r\n                                </React.Fragment> : null\r\n                        }\r\n                </React.Fragment>\r\n                {/* Github Repos Details*/}\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        {\r\n                            githubRepo.length > 0 ?\r\n                                <React.Fragment>\r\n                                    <GithubRepos/>\r\n                                </React.Fragment> : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default GithubSearchApp;\r\n","export default __webpack_public_path__ + \"static/media/Logo.8438bda6.png\";","import React  from 'react';\r\nimport './App.css';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./redux/store\";\r\nimport GithubSearchApp from \"./Components/GithubSearchApp\";\r\nimport Logo from \"./assets/Logo.png\";\r\nlet App = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <nav className=\"navbar navbar-dark bg-primary\">\r\n                <img\r\n                    src={Logo}\r\n                    className=\"img-fluid logo\"\r\n                    alt=\"brand\"\r\n                    style={{width: \"48px\", height: \"40px\"}}\r\n                />\r\n                <div className=\"container\">\r\n                    <a href=\"\" className=\"navbar-brand\"><h3>GitHUb Profile Search using React Redux</h3></a>\r\n                </div>\r\n            </nav>\r\n            <Provider store={store}>\r\n                <GithubSearchApp/>\r\n            </Provider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport '@fortawesome/fontawesome-free/css/fontawesome.css';\r\nimport 'mdbootstrap/css/bootstrap.min.css';\r\nimport 'mdbootstrap/css/mdb.css';\r\nimport './style.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}